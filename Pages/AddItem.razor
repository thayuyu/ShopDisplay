@page "/addnewitem"
@inject NavigationManager NavigationManager

<h3>AddItem</h3>

<div class="form-group">
    <label for="name">Name</label>
    <InputText id="name" class="form-control" @bind-Value="Name" />
</div>
<div class="form-group">
    <label for="pictureLink">Picture Link</label>
    <InputText id="pictureLink" class="form-control" @bind-Value="PictureLink" />
</div>
<div class="form-group">
    <label for="description">Description</label>
    <InputTextArea id="description" class="form-control" @bind-Value="Description" />
</div>
<div class="form-group">
    <label for="price">Price</label>
    <InputNumber id="price" class="form-control" @bind-Value="Price" />
</div>

<button @onclick="OnSubmit">Submit</button>


@if(InputEmpty)
{
    <p>Please fill in all the inputs</p>
}

@if (ItemExists)
{
    <p>Item exists already</p>
}
s
<h3>List of item already existing</h3>
@foreach (Item item in list)
{
    <a>@item.Name</a>
    <button @onclick="(e => delete(item.Id))">Delete</button>
}

@code {
    public string Name;
    public string PictureLink;
    public string Description;
    public double Price = 0.0;

    public bool InputEmpty = false;
    public bool ItemExists = false;

    public Item item = new();
    public ItemDb db = new();
    public List<Item> list = new();

    public void OnSubmit()
    {
        if(Name is null || PictureLink is null || Description is null || Price == 0.0)
        {
            InputEmpty = true;
        }
        else
        {
            item = db.GetOneItemsFromName(Name);
            if(item is null)
            {
                db.InsertIntoItems(Name, PictureLink, Description, Price);
                list = db.GetItems();
            }
            else
            {
                ItemExists = true;
            }
        }
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        list = db.GetItems();
    }

    public void delete(int id)
    {
        db.DeleteItem(id);
        list = db.GetItems();
    }
}
